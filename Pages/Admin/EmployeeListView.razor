@page "/admin/employees"
@using Microsoft.AspNetCore.Authorization
@using TimeTrackerClient.Services.Base
@using TimeTrackerClient.Services.Employee
@attribute [Authorize(Roles = "Administrator")]
@inject IEmployeeService EmployeeService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Employees Management</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">
                        <i class="fas fa-users me-2"></i>Employees Management
                    </h3>
                </div>
                <div class="card-body">

                    <!-- Employees Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th @* @onclick="() => SortBy(nameof(EmployeeReadDto.FullName))" *@ style="cursor: pointer;">
                                        Name
                                        
                                    </th>
                                    <th>Contact</th>
                                    <th @* @onclick="() => SortBy(nameof(EmployeeReadDto.HourlyWage))" *@ style="cursor: pointer;">
                                        Hourly Wage
                                        
                                    </th>
                                    <th>Work Entries</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (employees != null)
                                {
                                    @foreach (var employee in employees)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-circle me-3">
                                                        @employee.FullName.Substring(0, 2).ToUpper()
                                                    </div>
                                                    <div>
                                                        <strong>@employee.FullName</strong>
                                                        <br />
                                                        <small class="text-muted">Personal Number: @employee.PersonalNumber</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <i class="fas fa-phone me-1"></i>@employee.PhoneNumber
                                                <br />
                                                <i class="fas fa-map-marker-alt me-1"></i>
                                                <small class="text-muted">@(employee.Address?.Length > 30 ? employee.Address.Substring(0, 30) + "..." : employee.Address)</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-success fs-6">@employee.HourlyWage.ToString("C")</span>
                                            </td>
                                            <td>
                                                @if (employee.WorkEntries?.Any() == true)
                                                {
                                                    <span class="badge bg-primary">@employee.WorkEntries.Count entries</span>
                                                    <br />
                                                    <small class="text-muted">
                                                        Total: @employee.WorkEntries.Sum(w => w.WageForEntry).ToString("C")
                                                    </small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No entries</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-info"
                                                            @* @onclick="() => ViewEmployee(employee.Id)" *@
                                                            title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-primary"
                                                            @* @onclick="() => EditEmployee(employee.Id)" *@
                                                            title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger"
                                                            @* @onclick="() => ShowDeleteConfirmation(employee)" *@
                                                            title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #6c757d;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 0.8rem;
    }
</style>

@code {
    private IEnumerable<EmployeeReadDto>? employees;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var employeeResponse = await EmployeeService.GetAllEmployeesAsync();

            if (employeeResponse.Success)
            {
                employees = employeeResponse.Data;
                StateHasChanged();
            }
        }
    }
}