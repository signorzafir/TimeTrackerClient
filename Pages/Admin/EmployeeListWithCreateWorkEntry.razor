@page "/admin/employeeListWithCreateWorkEntry"
@using TimeTrackerClient.Services.Base
@using TimeTrackerClient.Services.Employee
@using TimeTrackerClient.Services.WorkEntry
@inject IEmployeeService employeeService
@inject IWorkEntryService workEntryService

<div>
    <header style="text-align: center; margin-bottom: 40px;">
        <h1 style="font-size: 2.5rem; font-weight: 700; margin-bottom: 5px; color: #2C3E50;">TimeTracker Client</h1>
        <h2 style="font-size: 1.75rem; color: #7f8c8d; font-weight: 400;">Employees Overview</h2>
    </header>
</div>
@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

@if (rows is null)
{
    <p>Loading employees...</p>
}
else if (!rows.Any())
{
    <p>No employees found.</p>
}
else
{
    <table class="table table-striped table-bordered align-middle">
        <thead class="table-light">
            <tr>
                <th style="width: 20%;">Name</th>
                <th style="width: 18%;">Date</th>
                <th style="width: 12%;">Hours</th>
                <th style="width: 12%;">Minutes</th>
                <th style="width: 15%;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in rows)
            {
                <tr>
                    <td>@row.EmployeeName</td>
                    <td>
                        <input type="date"
                               class="form-control form-control-sm"
                               @bind="row.Date" />
                    </td>
                    <td>
                        <input type="number"
                               class="form-control form-control-sm text-center"
                               min="0"
                               @bind="row.Hours" />
                    </td>
                    <td>
                        <input type="number"
                               class="form-control form-control-sm text-center"
                               min="0" max="59"
                               @bind="row.Minutes" />
                    </td>
                    <td class="text-center">
                        <button class="btn btn-primary btn-sm"
                                @onclick="() => RegisterWorkEntry(row)">
                            Register
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WorkEntryRow> rows;
    private List<EmployeeReadDto> employees = new();
    private string? successMessage;



    protected override async Task OnInitializedAsync()
    {
        var response = await employeeService.GetAllEmployeesAsync();
        if (response.Success)
        {
            employees = response.Data.ToList();

        }

        rows = employees.Select(e => new WorkEntryRow
        {
            EmployeeId = e.Id,
            EmployeeName = e.FullName,
            Date = DateTime.Today,
            Hours = 0,
            Minutes = 0,
            WageForEntry = e.HourlyWage
        }).ToList();
    }

    private async Task RegisterWorkEntry(WorkEntryRow row)
    {
        if (row.Hours == 0 && row.Minutes == 0)
        {
            // Optional: show a message to user here
            return;
        }

        var dto = new WorkEntryCreateDto
        {
            EmployeeId = row.EmployeeId,
            Date = row.Date,
            Duration = new System.TimeSpan(row.Hours, row.Minutes, 0),
            WageForEntry = row.WageForEntry
        };

        await workEntryService.CreateAsync(dto);
        successMessage = $"Work entry for {row.EmployeeName} registered successfully!";

        // Optional reset
        row.Hours = 0;
        row.Minutes = 0;
        row.WageForEntry = 0;
    }

    private class WorkEntryRow
    {
        public int EmployeeId { get; set; }
        public string EmployeeName { get; set; }
        public DateTime Date { get; set; }
        public int Hours { get; set; }
        public int Minutes { get; set; }
        public double WageForEntry { get; set; }
    }
}

